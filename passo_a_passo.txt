1.1)
>rails new social_networking -d postgresql

gem 'devise'
>bundle install

>rails g devise:install
configs da devise

>rails g devise admin

>rails db:drop
>rails db:create

1.2)

>rails db:migrate

gem 'rspec-rails', '~>5.0.0'
>bundle install

>rails g rspec:install

>rails g rspec:model admin

criação de testes:
  it "admin is valid" do
    admin = Admin.new(email:'admin@admin.com', password:'123456')
    expect(admin.email).to eql 'admin@admin.com'
    expect(admin).to be_valid
  end

  it "admin is not valid" do
    admin = Admin.new(email:'admin@admin.com')
    expect(admin).to_not be_valid
  end

1.3)

cria as views especificadas da devise
>rails g devise:views -v registrations sessions

troca a view device/sessions/new pela do git hub do professor
adiciona as imagens do git hub do professor
estiliza a view application.html.erb:
  <html style="height: 100%">
  <body style="height: 100%">

1.4)

no db/seeds.rb
  Admin.create(email:'admin@admin.com', password:'123456')
  puts "admin created"
>rails db:seed

altero application.html.erb 
  <body style="height: 100%">
    <%= notice %>
    <%= alert %>
    <%= content_for?(:content) ? yield(:content) : yield %>
  </body>

adiciono a view admin.html.erb em layouts pelo git hub do professor
  <% content_for :content do %>
    <%= render "layouts/admin/header" %>
    <div class="container mt-5">
      <%= yield %>
    </div>
  <% end %>
  <%= render template: "layouts/application" %>

criar admin_controller.rb
  class AdminController < ApplicationController

    before_action :authenticate_admin

    def authenticate_admin
      redirect_to new_admin_session_path unless current_admin?
    end

    def current_admin? # ? -> retorna um booleano
      if current_admin.present?
        true
      else
        false
      end
    end

  end

1.5 e 1.6)

routes

  Rails.application.routes.draw do
    devise_for :admins, skip: [:registrations], controllers: {sessions: 'admins/sessions' }
    # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html
    
    namespace :admin do
      #admin/posts
      root to: "home#index"
    end
    
  end

-cria controllers/admin/home_controller.rb
  class Admin::HomeController < AdminController
    def index
    end
  end

-cria controllers/admins/sessions_controller.rb
  class Admins::SessionsController < Devise::SessionsController

    def after_sign_out_path_for(admin)
      new_admin_session_path
    end

  end

-cria views/admin/home/index.html.erb
  <h2>Seja bem-vindo ao painel administrativo</h2>

-cria views/layouts/admin/_header.html.erb
  <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
    <div class="container">
      <ul class="navbar-nav">
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Home", admin_root_path, class: "nav-link") %>
        </li>
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Administradores", admin_root_path, class: "nav-link") %>
        </li>
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Usuários", admin_root_path, class: "nav-link") %>
        </li>
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Posts", admin_root_path, class: "nav-link") %>
        </li>
        
      </ul>
      <div class="nav-item d-flex">
        <ul class="navbar-nav">
          <li class="nav-item">
            <div class="py-2 mr-4" style="color:#fff;"><%= current_admin.email %></div>
          </li>
          <li class="nav-item">
            <%= link_to("Sair", destroy_admin_session_path, method: :delete, class: "nav-link")%>
          </li>
        </ul>
      </div>
    </div>
  </nav>

2.1)
user: <%= ENV.fetch("USER_PG") %>
password: <%= ENV.fetch("PASSWORD_PG") %>
port: 5432

-acrescentar em config/environments/production.rb
# Do not fallback to assets pipeline if a precompiled asset is missed.
  config.assets.compile = true
  config.serve_static_assets = true

>heroku apps:create dio-social-networking
>heroku buildpacks:add heroku/nodejs
>heroku buildpacks:add heroku/ruby 
>git push heroku main
>heroku run rails db:migrate
>heroku run rails db:seed


routes.rb
  namespace :admin do
    #admin/posts
    root to: "home#index"
    resources :admins
  end

criou migration para add name à tabela admins
  >rails g migration add_name_to_admins

  class AddNameToAdmins < ActiveRecord::Migration[6.1]
    def change
      add_column :admins, :name, :string
    end
  end

  >rails db:migrate

-atualiza os testes, acrescentando name, pois passou a ser obrig, pelo validates do model

  it "admin is valid" do
    admin = Admin.new(name: "Admin First", email:'admin@admin.com', password:'123456')

    expect(admin.email).to eql 'admin@admin.com'
    expect(admin).to be_valid
  end

-adiciona validates no models admin

  validates :name, presence: true

-cria controllers/admin/admins_controller.rb
  class Admin::AdminsController < AdminController
    def index
      @admins = Admin.all
    end
  end

-cria a view views/admin/admins/index.html.erb
  <h4>Admins</h4><br>

  <table class="table table-dark">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">Nome</th>
        <th scope="col">E-mail</th>
        <th scope="col">Criado em</th>
      </tr>
    </thead>
    <tbody>
    <% @admins.each do |admin| %>
      <tr>
        <th scope="row"><%= admin.id %></th>
        <td><%= admin.name %></td>
        <td><%= admin.email %></td>
        <td><%= admin.created_at %></td>
      </tr>  
    <% end %>
    </tbody>
  </table>

2.2)
  <li class="nav-item <%= current_page?(admin_admins_path)? "active" : "" %>">
    <%= link_to("Administradores", admin_admins_path, class: "nav-link") %>
  </li>

2.3)

- admins_controller.rb
  def new
    @admin = Admin.new
  end

  private 

  def form_params
    params.require(:admin).permit(:name, :email, :password, :password_confirmation)
  end

- views/admin/admins/index.html.erb
<%= link_to 'New Admin', new_admin_admin_path, class: 'btn btn-link' %>

-criar views/admin/admins/_form.html.erb
<div class="card" style="background-color:#f6f6f6;">
  <div class="card-body">
    <%= form_with(model: [:admin, admin], local: true) do |f| %>
      <div class="form-group">
        <%= f.label :name %>
        <%= f.text_field :name , class: 'form-control'%>
      </div>
      <div class="form-group">
        <%= f.label :email %>
        <%= f.email_field :email , class: 'form-control'%>
      </div>
      <div class="form-row">
        <div class="col-6">
            <div class="form-group">
                <%= f.label :password %>
                <%= f.password_field :password , class: 'form-control'%>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <%= f.label :password_confirmation %>
                <%= f.password_field :password_confirmation , class: 'form-control'%>
            </div>
        </div>
      </div>
      <button type="submit" class="btn btn-primary">Salvar</button>
    <% end %>      
  </div>
</div>

-criar views/admin/admins/new.html.erb
<h2>Novo Administrador</h2>

<%= render 'form', admin: @admin %>

2.4)

-controllers/admin/admins_controller.rb
  def create
    @admin = Admin.new(form_params)

    if @admin.save
      redirect_to admin_admins_path
    else
      render :new
    end
  end

  def edit
    @admin = Admin.find(params[:id])
  end

-views/admin/admins/_form.html.erb
  #colocado dentro do form
  <%= render 'layouts/form_errors', record: admin%> 

- views/admin/admins/index.html.erb

  # acrescenta uma coluna na tabela
  <td><%= link_to 'Editar', edit_admin_admin_path(admin), class: 'btn btn-warning btn-sm' %></td>

- cria views/admin/admins/edit.html.erb
  <h2>Editar Administrador #<%= @admin.id %></h2>
  <%= render 'form', admin: @admin %>

- cria views/layouts/_form_errors.html.erb
  # cria essa partial que é colocada dentro do _form
  <% if record && record.errors.any? %>
    <div class="alert alert-danger" role="alert">
      <h4 class="alert-heading"><%= t('.error_on_save') %></h4>
      <ul>
      <% record.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

3.5) deletar admin

- controllers/admin/admins_controller.rb
  def update
    @admin = Admin.find(params[:id])
    params = form_params.to_h

    # se password não preenchido
    params = params.except!(:password, :password_confirmation) if params[:password].blank?
    
    if @admin.update(params)
      redirect_to admin_admins_path
    else
      render :edit
    end
  end

  def destroy
    @admin = Admin.find(params[:id])
    @admin.destroy
    redirect_to admin_admins_path
  end

- views/admin/admins/_form.html.erb
  # após o button de submit
  <%= link_to 'Voltar', admin_admins_path, class: 'btn btn-secondary ml-3' %>

- views/admin/admins/index.html.erb

  # adiciona mais uma coluna
  <td><%= link_to 'Deletar', admin_admin_path(admin), method: :delete, data: {confirm:"Are you sure?"}, class: 'btn btn-danger btn-sm' %></td>