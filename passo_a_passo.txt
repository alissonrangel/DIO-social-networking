1.1)
>rails new social_networking -d postgresql

gem 'devise'
>bundle install

>rails g devise:install
configs da devise

>rails g devise admin

>rails db:drop
>rails db:create

1.2)

>rails db:migrate

gem 'rspec-rails', '~>5.0.0'
>bundle install

>rails g rspec:install

>rails g rspec:model admin

criação de testes:
  it "admin is valid" do
    admin = Admin.new(email:'admin@admin.com', password:'123456')
    expect(admin.email).to eql 'admin@admin.com'
    expect(admin).to be_valid
  end

  it "admin is not valid" do
    admin = Admin.new(email:'admin@admin.com')
    expect(admin).to_not be_valid
  end

1.3)

cria as views especificadas da devise
>rails g devise:views -v registrations sessions

troca a view device/sessions/new pela do git hub do professor
adiciona as imagens do git hub do professor
estiliza a view application.html.erb:
  <html style="height: 100%">
  <body style="height: 100%">

1.4)

no db/seeds.rb
  Admin.create(email:'admin@admin.com', password:'123456')
  puts "admin created"
>rails db:seed

altero application.html.erb 
  <body style="height: 100%">
    <%= notice %>
    <%= alert %>
    <%= content_for?(:content) ? yield(:content) : yield %>
  </body>

adiciono a view admin.html.erb em layouts pelo git hub do professor
  <% content_for :content do %>
    <%= render "layouts/admin/header" %>
    <div class="container mt-5">
      <%= yield %>
    </div>
  <% end %>
  <%= render template: "layouts/application" %>

criar admin_controller.rb
  class AdminController < ApplicationController

    before_action :authenticate_admin

    def authenticate_admin
      redirect_to new_admin_session_path unless current_admin?
    end

    def current_admin? # ? -> retorna um booleano
      if current_admin.present?
        true
      else
        false
      end
    end

  end

1.5 e 1.6)

routes

  Rails.application.routes.draw do
    devise_for :admins, skip: [:registrations], controllers: {sessions: 'admins/sessions' }
    # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html
    
    namespace :admin do
      #admin/posts
      root to: "home#index"
    end
    
  end

-cria controllers/admin/home_controller.rb
  class Admin::HomeController < AdminController
    def index
    end
  end

-cria controllers/admins/sessions_controller.rb
  class Admins::SessionsController < Devise::SessionsController

    def after_sign_out_path_for(admin)
      new_admin_session_path
    end

  end

-cria views/admin/home/index.html.erb
  <h2>Seja bem-vindo ao painel administrativo</h2>

-cria views/layouts/admin/_header.html.erb
  <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
    <div class="container">
      <ul class="navbar-nav">
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Home", admin_root_path, class: "nav-link") %>
        </li>
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Administradores", admin_root_path, class: "nav-link") %>
        </li>
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Usuários", admin_root_path, class: "nav-link") %>
        </li>
        <li class="nav-item <%= current_page?(admin_root_path)? "active" : "" %>">
          <%= link_to("Posts", admin_root_path, class: "nav-link") %>
        </li>
        
      </ul>
      <div class="nav-item d-flex">
        <ul class="navbar-nav">
          <li class="nav-item">
            <div class="py-2 mr-4" style="color:#fff;"><%= current_admin.email %></div>
          </li>
          <li class="nav-item">
            <%= link_to("Sair", destroy_admin_session_path, method: :delete, class: "nav-link")%>
          </li>
        </ul>
      </div>
    </div>
  </nav>

2.1)
user: <%= ENV.fetch("USER_PG") %>
password: <%= ENV.fetch("PASSWORD_PG") %>
port: 5432

-acrescentar em config/environments/production.rb
# Do not fallback to assets pipeline if a precompiled asset is missed.
  config.assets.compile = true
  config.serve_static_assets = true