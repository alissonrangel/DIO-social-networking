1.1)
>rails new social_networking -d postgresql

gem 'devise'
>bundle install

>rails g devise:install
configs da devise

>rails g devise admin

>rails db:drop
>rails db:create

1.2)

>rails db:migrate

gem 'rspec-rails', '~>5.0.0'
>bundle install

>rails g rspec:install

>rails g rspec:model admin

criação de testes:
  it "admin is valid" do
    admin = Admin.new(email:'admin@admin.com', password:'123456')
    expect(admin.email).to eql 'admin@admin.com'
    expect(admin).to be_valid
  end

  it "admin is not valid" do
    admin = Admin.new(email:'admin@admin.com')
    expect(admin).to_not be_valid
  end

1.3)

cria as views especificadas da devise
>rails g devise:views -v registrations sessions

troca a view device/sessions/new pela do git hub do professor
adiciona as imagens do git hub do professor
estiliza a view application.html.erb:
  <html style="height: 100%">
  <body style="height: 100%">

1.4)

no db/seeds.rb
  Admin.create(email:'admin@admin.com', password:'123456')
  puts "admin created"
>rails db:seed

altero application.html.erb 
  <body style="height: 100%">
    <%= notice %>
    <%= alert %>
    <%= content_for?(:content) ? yield(:content) : yield %>
  </body>

adiciono a view admin.html.erb em layouts pelo git hub do professor
  <% content_for :content do %>
    <%= render "layouts/admin/header" %>
    <div class="container mt-5">
      <%= yield %>
    </div>
  <% end %>
  <%= render template: "layouts/application" %>

criar admin_controller.rb
  class AdminController < ApplicationController

    before_action :authenticate_admin

    def authenticate_admin
      redirect_to new_admin_session_path unless current_admin?
    end

    def current_admin? # ? -> retorna um booleano
      if current_admin.present?
        true
      else
        false
      end
    end

  end


